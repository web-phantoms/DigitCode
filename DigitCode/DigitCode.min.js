let DigitCode = (o, b) => {
  let s = o.id ? o.id : "#DigitCode",c = o.count ? o.count : 4,t = o.type ? o.type : "text", inp = [],placeholder = q(s);
    function d(s){return document.createElement(s);}
    function q(s){return document.querySelector(s);}
  for (let i = 0; i <= c - 1; i++) {let increator = d("input");increator.setAttribute("maxlength", "1");increator.type = t;placeholder.append(increator);inp.push(increator);}
inp.forEach((input, i) => {
    input.addEventListener("click", (e) => {  e.preventDefault();});
    input.addEventListener("keyup", function(e) {
      switch (e.key) {
        case "ArrowLeft":
          if (i != 0) {inp[i - 1].focus();}break;
        case "ArrowRight":
          if (i != c - 1) {inp[i + 1].focus();}break;
        case "Backspace":
          if (i != 0) {inp[i].value = "";inp[i].classList.remove("filled");inp[i - 1].value = "";inp[i - 1].removeAttribute("readonly");inp[i - 1].focus();}}
      if (input.value) {
        if (i == c - 1) {
          var co = [...inp].map((input) => input.value).join("");
          if (co.length == c) {
            b(co);
          }inp[i].classList.add("class", "filled")inp[i].focus();} else {inp[i].classList.add("filled");inp[i].setAttribute("readonly", true);inp[i + 1].focus();}}});});
  let st = d("style");
  st.innerHTML = `${s} input {-webkit-appearance: none;appearance: none;margin: 0 0.5rem;padding: 0.5rem;border: 2px solid #333;width: 50px;height: 50px;border-radius: 5px;text-align: center;font-size: 3rem;user-select: none;}${s} input.filled {border: 2px solid #1e90ff; color: #1e90ff;}${s} input::-webkit-outer-spin-button,${s} input::-webkit-inner-spin-button {-webkit-appearance: none; margin: 0;}${s} input[type=number] {-moz-appearance: textfield;}`;
  q('head').append(st);
}
